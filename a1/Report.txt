Liam Jackson
g4jackso
1000691281

Regarding how I developed my program, my first step was to plan out how the penguin would function. I came to the conclusion that though I can use the torso as a basis for the other body parts to move around, some objects require more than the torso for dependency. In this case, the foot of the penguin had its own rotation to do, but it was also dependent on the rotation of the leg. So the kinematic structure was to the use the torso as the root of our kinematic tree. The first branch off the root was the legs, the head and the wing. The wing was the only leaf in this tree and the head and legs were internal. The mouth was a leaf, branching from the head, and the feet were leaves, branching from the legs. So after I developed my kinematic tree, the second step was to simply create the shapes to resemble the penguin. I created the warped hexagon for the body, trapezoid for the wing, rectangles for the legs and feet, a trapezoid and rectangle for the mouth and an irregular polygon for the head. I created functions to draw these shapes out, centered on the origin. I then began mapping them out, translating them so I could have its origin be where I want the joint to be. After mapping each shape to my desired location for it, I added in transformations that were dependent on the spinner. This includes the rotation of the joints, the translation for the mouth and the vertical stretching for the wing. I created the joints and variables to hold the spinner’s values for them and made the translations relative to those transformations. With the creation of the joints, I also had to make the constraints on them. Then I ran across some trouble. Some of the degrees of freedom are dependent on other joints, such as the feet, as it has to also rotate with the legs. This took some thinking and planning to solve. I then came to the conclusion that putting it’s transformations inside the transformation stack of the joints it was relative to would solve my problem. I did this for the feet as they were relative to the legs and the mouth as it was relative to the head. After figuring out all the animations, I then made the animation function affect the joints and degrees of freedom for all the possible spinners. This was relatively simple. After doing this, I added in the circles to show the joint, and in turn figuring out how to draw circles in openGL. Finally, as I may have misunderstood the task list for part B, I created a couple other animations, such as a running one and a jumping one, which then requires the movement of the penguin vertically and horizontally, so I added those variables to the program and its own spinner. Finally, I cleaned up everything, making sure constraints were proper and transformations didn’t cause any irregularities in the penguin. The animations were created by using a periodic function to calculate a value that would cycle upon itself. This value was used to assign things like angles of rotations for joints and vertical position for a jumping animation. This was the final step of finishing the program.
